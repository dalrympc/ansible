---
- hosts: loadbalancer
  become: true
  tasks:
    - name: Verify NGINX Service
      command: service nginx status warn=no
    
    - name: Verify NGINX is listening on Port 80
      wait_for: port=80 timeout=1  


- hosts: webservers
  become: true
  tasks:
    - name: Verify Apache2 Service
      command: service apache2 status warn=no

    - name: Verify Apache2 is listening on Port 80
      wait_for: port=80 timeout=1


- hosts: database
  become: true
  tasks:
    - name: Verify MySQL Service
      command: service mysql status warn=no

    - name: Verify MySQL is listening on Port 3306
      wait_for: port=3306 timeout=1

- hosts: control
  tasks:
    - name: Verify End-to-End Response
      uri: 
        url: http://{{item}}
        return_content: yes
      with_items: "{{ groups['loadbalancer'] }}"
      register: lb_index


    - fail:
        msg: Index Failed to Return Content
      when: "'Hello, from sunny' not in item.content"
      with_items: "{{ lb_index.results }}"

    - name: Verify End-to-End DB Response
      uri:
        url: http://{{item}}/db
        return_content: yes
      with_items: "{{ groups['loadbalancer'] }}"
      register: lb_db_index


    - fail:
        msg: Index Failed to Return Content
      when: "'Database Connected from' not in item.content"
      with_items: "{{ lb_db_index.results }}"

- hosts: loadbalancer
  tasks:
    - name: Verify Backend Response
      uri:
        url: http://{{item}} 
        return_content: yes
      with_items: "{{ groups['webservers'] }}"
      register: app_index


    - fail: msg="Index Failed to Return Content"
      when: "'Hello, from sunny {{item.item}}!' not in item.content"
      with_items: "{{app_index.results}}"

    - name: Verify Backend DB Response
      uri:
        url: http://{{item}}/db
        return_content: yes
      with_items: "{{ groups['webservers'] }}"
      register: app_db_index


    - fail: msg="Index Failed to Return Content"
      when: "'Database Connected from {{item.item}}!' not in item.content"
      with_items: "{{app_db_index.results}}"

